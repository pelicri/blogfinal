{"ast":null,"code":"/* eslint-disable */\n// this is an auto generated file. This will be overwritten\nexport const createPost =\n/* GraphQL */\n`\n  mutation CreatePost(\n    $input: CreatePostInput!\n    $condition: ModelPostConditionInput\n  ) {\n    createPost(input: $input, condition: $condition) {\n      id\n      postOwnerId\n      postOwnerUsername\n      postTitle\n      postBody\n      createdAt\n      comments {\n        items {\n          id\n          commentOwnerId\n          commentOwnerUsername\n          content\n          createdAt\n        }\n        nextToken\n      }\n      likes {\n        items {\n          id\n          numberLikes\n          likeOwnerId\n          likeOwnerUsername\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const updatePost =\n/* GraphQL */\n`\n  mutation UpdatePost(\n    $input: UpdatePostInput!\n    $condition: ModelPostConditionInput\n  ) {\n    updatePost(input: $input, condition: $condition) {\n      id\n      postOwnerId\n      postOwnerUsername\n      postTitle\n      postBody\n      createdAt\n      comments {\n        items {\n          id\n          commentOwnerId\n          commentOwnerUsername\n          content\n          createdAt\n        }\n        nextToken\n      }\n      likes {\n        items {\n          id\n          numberLikes\n          likeOwnerId\n          likeOwnerUsername\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const deletePost =\n/* GraphQL */\n`\n  mutation DeletePost(\n    $input: DeletePostInput!\n    $condition: ModelPostConditionInput\n  ) {\n    deletePost(input: $input, condition: $condition) {\n      id\n      postOwnerId\n      postOwnerUsername\n      postTitle\n      postBody\n      createdAt\n      comments {\n        items {\n          id\n          commentOwnerId\n          commentOwnerUsername\n          content\n          createdAt\n        }\n        nextToken\n      }\n      likes {\n        items {\n          id\n          numberLikes\n          likeOwnerId\n          likeOwnerUsername\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const createComment =\n/* GraphQL */\n`\n  mutation CreateComment(\n    $input: CreateCommentInput!\n    $condition: ModelCommentConditionInput\n  ) {\n    createComment(input: $input, condition: $condition) {\n      id\n      commentOwnerId\n      commentOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n      content\n      createdAt\n    }\n  }\n`;\nexport const updateComment =\n/* GraphQL */\n`\n  mutation UpdateComment(\n    $input: UpdateCommentInput!\n    $condition: ModelCommentConditionInput\n  ) {\n    updateComment(input: $input, condition: $condition) {\n      id\n      commentOwnerId\n      commentOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n      content\n      createdAt\n    }\n  }\n`;\nexport const deleteComment =\n/* GraphQL */\n`\n  mutation DeleteComment(\n    $input: DeleteCommentInput!\n    $condition: ModelCommentConditionInput\n  ) {\n    deleteComment(input: $input, condition: $condition) {\n      id\n      commentOwnerId\n      commentOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n      content\n      createdAt\n    }\n  }\n`;\nexport const createLike =\n/* GraphQL */\n`\n  mutation CreateLike(\n    $input: CreateLikeInput!\n    $condition: ModelLikeConditionInput\n  ) {\n    createLike(input: $input, condition: $condition) {\n      id\n      numberLikes\n      likeOwnerId\n      likeOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n    }\n  }\n`;\nexport const updateLike =\n/* GraphQL */\n`\n  mutation UpdateLike(\n    $input: UpdateLikeInput!\n    $condition: ModelLikeConditionInput\n  ) {\n    updateLike(input: $input, condition: $condition) {\n      id\n      numberLikes\n      likeOwnerId\n      likeOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n    }\n  }\n`;\nexport const deleteLike =\n/* GraphQL */\n`\n  mutation DeleteLike(\n    $input: DeleteLikeInput!\n    $condition: ModelLikeConditionInput\n  ) {\n    deleteLike(input: $input, condition: $condition) {\n      id\n      numberLikes\n      likeOwnerId\n      likeOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/cristianoandradre/Documents/treinamentoAWS/blogfinal/blogfinal/src/graphql/mutations.js"],"names":["createPost","updatePost","deletePost","createComment","updateComment","deleteComment","createLike","updateLike","deleteLike"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,UAAU;AAAG;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlC;AAkCP,OAAO,MAAMC,UAAU;AAAG;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlC;AAkCP,OAAO,MAAMC,UAAU;AAAG;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlC;AAkCP,OAAO,MAAMC,aAAa;AAAG;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;CAArC;AA4BP,OAAO,MAAMC,aAAa;AAAG;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;CAArC;AA4BP,OAAO,MAAMC,aAAa;AAAG;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;CAArC;AA4BP,OAAO,MAAMC,UAAU;AAAG;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlC;AA2BP,OAAO,MAAMC,UAAU;AAAG;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlC;AA2BP,OAAO,MAAMC,UAAU;AAAG;AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlC","sourcesContent":["/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const createPost = /* GraphQL */ `\n  mutation CreatePost(\n    $input: CreatePostInput!\n    $condition: ModelPostConditionInput\n  ) {\n    createPost(input: $input, condition: $condition) {\n      id\n      postOwnerId\n      postOwnerUsername\n      postTitle\n      postBody\n      createdAt\n      comments {\n        items {\n          id\n          commentOwnerId\n          commentOwnerUsername\n          content\n          createdAt\n        }\n        nextToken\n      }\n      likes {\n        items {\n          id\n          numberLikes\n          likeOwnerId\n          likeOwnerUsername\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const updatePost = /* GraphQL */ `\n  mutation UpdatePost(\n    $input: UpdatePostInput!\n    $condition: ModelPostConditionInput\n  ) {\n    updatePost(input: $input, condition: $condition) {\n      id\n      postOwnerId\n      postOwnerUsername\n      postTitle\n      postBody\n      createdAt\n      comments {\n        items {\n          id\n          commentOwnerId\n          commentOwnerUsername\n          content\n          createdAt\n        }\n        nextToken\n      }\n      likes {\n        items {\n          id\n          numberLikes\n          likeOwnerId\n          likeOwnerUsername\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const deletePost = /* GraphQL */ `\n  mutation DeletePost(\n    $input: DeletePostInput!\n    $condition: ModelPostConditionInput\n  ) {\n    deletePost(input: $input, condition: $condition) {\n      id\n      postOwnerId\n      postOwnerUsername\n      postTitle\n      postBody\n      createdAt\n      comments {\n        items {\n          id\n          commentOwnerId\n          commentOwnerUsername\n          content\n          createdAt\n        }\n        nextToken\n      }\n      likes {\n        items {\n          id\n          numberLikes\n          likeOwnerId\n          likeOwnerUsername\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const createComment = /* GraphQL */ `\n  mutation CreateComment(\n    $input: CreateCommentInput!\n    $condition: ModelCommentConditionInput\n  ) {\n    createComment(input: $input, condition: $condition) {\n      id\n      commentOwnerId\n      commentOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n      content\n      createdAt\n    }\n  }\n`;\nexport const updateComment = /* GraphQL */ `\n  mutation UpdateComment(\n    $input: UpdateCommentInput!\n    $condition: ModelCommentConditionInput\n  ) {\n    updateComment(input: $input, condition: $condition) {\n      id\n      commentOwnerId\n      commentOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n      content\n      createdAt\n    }\n  }\n`;\nexport const deleteComment = /* GraphQL */ `\n  mutation DeleteComment(\n    $input: DeleteCommentInput!\n    $condition: ModelCommentConditionInput\n  ) {\n    deleteComment(input: $input, condition: $condition) {\n      id\n      commentOwnerId\n      commentOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n      content\n      createdAt\n    }\n  }\n`;\nexport const createLike = /* GraphQL */ `\n  mutation CreateLike(\n    $input: CreateLikeInput!\n    $condition: ModelLikeConditionInput\n  ) {\n    createLike(input: $input, condition: $condition) {\n      id\n      numberLikes\n      likeOwnerId\n      likeOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n    }\n  }\n`;\nexport const updateLike = /* GraphQL */ `\n  mutation UpdateLike(\n    $input: UpdateLikeInput!\n    $condition: ModelLikeConditionInput\n  ) {\n    updateLike(input: $input, condition: $condition) {\n      id\n      numberLikes\n      likeOwnerId\n      likeOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n    }\n  }\n`;\nexport const deleteLike = /* GraphQL */ `\n  mutation DeleteLike(\n    $input: DeleteLikeInput!\n    $condition: ModelLikeConditionInput\n  ) {\n    deleteLike(input: $input, condition: $condition) {\n      id\n      numberLikes\n      likeOwnerId\n      likeOwnerUsername\n      post {\n        id\n        postOwnerId\n        postOwnerUsername\n        postTitle\n        postBody\n        createdAt\n        comments {\n          nextToken\n        }\n        likes {\n          nextToken\n        }\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}