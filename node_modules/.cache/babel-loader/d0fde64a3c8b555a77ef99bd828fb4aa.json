{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { HttpResponse } from '@aws-sdk/protocol-http';\nimport { buildQueryString } from '@aws-sdk/querystring-builder';\nimport axios from 'axios';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('axios-http-handler');\nexport var SEND_PROGRESS_EVENT = 'sendProgress';\n\nvar AxiosHttpHandler =\n/** @class */\nfunction () {\n  function AxiosHttpHandler(httpOptions, emitter) {\n    if (httpOptions === void 0) {\n      httpOptions = {};\n    }\n\n    this.httpOptions = httpOptions;\n    this.emitter = emitter;\n  }\n\n  AxiosHttpHandler.prototype.destroy = function () {// Do nothing. TLS and HTTP/2 connection pooling is handled by the\n    // browser.\n  };\n\n  AxiosHttpHandler.prototype.handle = function (request, options) {\n    var requestTimeoutInMs = this.httpOptions.requestTimeout;\n    var emitter = this.emitter;\n    var path = request.path;\n\n    if (request.query) {\n      var queryString = buildQueryString(request.query);\n\n      if (queryString) {\n        path += \"?\" + queryString;\n      }\n    }\n\n    var port = request.port;\n    var url = request.protocol + \"//\" + request.hostname + (port ? \":\" + port : '') + path;\n    var axiosRequest = {};\n    axiosRequest.url = url;\n    axiosRequest.method = request.method;\n    axiosRequest.headers = request.headers;\n    axiosRequest.data = request.body;\n\n    if (emitter) {\n      axiosRequest.onUploadProgress = function (event) {\n        emitter.emit(SEND_PROGRESS_EVENT, event);\n        logger.debug(event);\n      };\n    }\n\n    if (this.httpOptions.bufferBody) {\n      axiosRequest.responseType = 'blob';\n    }\n\n    var raceOfPromises = [axios.request(axiosRequest).then(function (response) {\n      return {\n        response: new HttpResponse({\n          headers: response.headers,\n          statusCode: response.status,\n          body: response.data\n        })\n      };\n    }), requestTimeout(requestTimeoutInMs)];\n    return Promise.race(raceOfPromises);\n  };\n\n  return AxiosHttpHandler;\n}();\n\nexport { AxiosHttpHandler };\n\nfunction requestTimeout(timeoutInMs) {\n  if (timeoutInMs === void 0) {\n    timeoutInMs = 0;\n  }\n\n  return new Promise(function (resolve, reject) {\n    if (timeoutInMs) {\n      setTimeout(function () {\n        var timeoutError = new Error(\"Request did not complete within \" + timeoutInMs + \" ms\");\n        timeoutError.name = 'TimeoutError';\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}","map":{"version":3,"sources":["../../src/providers/axios-http-handler.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { HttpResponse } from '@aws-sdk/protocol-http';\nimport { buildQueryString } from '@aws-sdk/querystring-builder';\nimport axios from 'axios';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('axios-http-handler');\nexport var SEND_PROGRESS_EVENT = 'sendProgress';\nvar AxiosHttpHandler = /** @class */ (function () {\n    function AxiosHttpHandler(httpOptions, emitter) {\n        if (httpOptions === void 0) { httpOptions = {}; }\n        this.httpOptions = httpOptions;\n        this.emitter = emitter;\n    }\n    AxiosHttpHandler.prototype.destroy = function () {\n        // Do nothing. TLS and HTTP/2 connection pooling is handled by the\n        // browser.\n    };\n    AxiosHttpHandler.prototype.handle = function (request, options) {\n        var requestTimeoutInMs = this.httpOptions.requestTimeout;\n        var emitter = this.emitter;\n        var path = request.path;\n        if (request.query) {\n            var queryString = buildQueryString(request.query);\n            if (queryString) {\n                path += \"?\" + queryString;\n            }\n        }\n        var port = request.port;\n        var url = request.protocol + \"//\" + request.hostname + (port ? \":\" + port : '') + path;\n        var axiosRequest = {};\n        axiosRequest.url = url;\n        axiosRequest.method = request.method;\n        axiosRequest.headers = request.headers;\n        axiosRequest.data = request.body;\n        if (emitter) {\n            axiosRequest.onUploadProgress = function (event) {\n                emitter.emit(SEND_PROGRESS_EVENT, event);\n                logger.debug(event);\n            };\n        }\n        if (this.httpOptions.bufferBody) {\n            axiosRequest.responseType = 'blob';\n        }\n        var raceOfPromises = [\n            axios.request(axiosRequest).then(function (response) {\n                return {\n                    response: new HttpResponse({\n                        headers: response.headers,\n                        statusCode: response.status,\n                        body: response.data,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        return Promise.race(raceOfPromises);\n    };\n    return AxiosHttpHandler;\n}());\nexport { AxiosHttpHandler };\nfunction requestTimeout(timeoutInMs) {\n    if (timeoutInMs === void 0) { timeoutInMs = 0; }\n    return new Promise(function (resolve, reject) {\n        if (timeoutInMs) {\n            setTimeout(function () {\n                var timeoutError = new Error(\"Request did not complete within \" + timeoutInMs + \" ms\");\n                timeoutError.name = 'TimeoutError';\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n//# sourceMappingURL=axios-http-handler.js.map"]},"metadata":{},"sourceType":"module"}