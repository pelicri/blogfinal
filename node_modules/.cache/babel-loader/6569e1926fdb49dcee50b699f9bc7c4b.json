{"ast":null,"code":"var _jsxFileName = \"/Users/cristianoandradre/Documents/treinamentoAWS/blogfinal/blogfinal/src/components/DisplayPosts.js\";\nimport React, { Component } from 'react';\nimport { listPosts } from '../graphql/queries';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport DeletePost from './DeletePost';\nimport EditPost from './EditPost';\nimport { onCreatePost } from '../graphql/subscriptions';\n\nclass DisplayPosts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.componentDidMount = async () => {\n      this.getPosts();\n      this.createPostListener = API.graphql(graphqlOperation(onCreatePost));\n    };\n\n    this.getPosts = async () => {\n      const result = await API.graphql(graphqlOperation(listPosts)); //console.log(\"All Posts: \", JSON.stringify(result.data.listPosts.items));\n      //console.log(\"All Posts: \", result.data.listPosts.items);\n\n      this.setState({\n        posts: result.data.listPosts.items\n      });\n    };\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return posts.map(post => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts\",\n        style: rowStyle,\n        key: post.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, post.postTitle), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontStyle: \"italic\",\n          color: \"#0ca5e297\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, \"Postado Por: \", \" \", post.postOwnerUsername, \" on \", /*#__PURE__*/React.createElement(\"time\", {\n        style: {\n          fontStyle: \"italic\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, \" \", new Date(post.createdAt).toDateString())), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, post.postBody), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DeletePost, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(EditPost, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      })));\n    });\n  }\n\n}\n\nconst rowStyle = {\n  background: '#f4f4f4',\n  padding: '10px',\n  border: '1px #ccc dotted',\n  margin: '14px'\n};\nexport default DisplayPosts;","map":{"version":3,"sources":["/Users/cristianoandradre/Documents/treinamentoAWS/blogfinal/blogfinal/src/components/DisplayPosts.js"],"names":["React","Component","listPosts","API","graphqlOperation","DeletePost","EditPost","onCreatePost","DisplayPosts","state","posts","componentDidMount","getPosts","createPostListener","graphql","result","setState","data","items","render","map","post","rowStyle","id","postTitle","fontStyle","color","postOwnerUsername","Date","createdAt","toDateString","postBody","background","padding","border","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAqC,aAArC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AACA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCQ,KAFiC,GAEzB;AACJC,MAAAA,KAAK,EAAE;AADH,KAFyB;;AAAA,SAMjCC,iBANiC,GAMb,YAAY;AAC5B,WAAKC,QAAL;AAEA,WAAKC,kBAAL,GAA0BV,GAAG,CAACW,OAAJ,CAAYV,gBAAgB,CAACG,YAAD,CAA5B,CAA1B;AACH,KAVgC;;AAAA,SAYjCK,QAZiC,GAYtB,YAAY;AACnB,YAAMG,MAAM,GAAG,MAAMZ,GAAG,CAACW,OAAJ,CAAYV,gBAAgB,CAACF,SAAD,CAA5B,CAArB,CADmB,CAEnB;AACA;;AACA,WAAKc,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEK,MAAM,CAACE,IAAP,CAAYf,SAAZ,CAAsBgB;AAA9B,OAAd;AACH,KAjBgC;AAAA;;AAmBjCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACT,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,WAAOC,KAAK,CAACU,GAAN,CAAWC,IAAD,IAAU;AACvB,0BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAEC,QAA9B;AAAwC,QAAA,GAAG,EAAID,IAAI,CAACE,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,SAAV,CADJ,eAEI;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,KAAK,EAAC;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,eADL,OACuBL,IAAI,CAACM,iBAD5B,EAEK,MAFL,eAGI;AAAM,QAAA,KAAK,EAAE;AAAEF,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,GADL,EAEM,IAAIG,IAAJ,CAASP,IAAI,CAACQ,SAAd,EAAyBC,YAAzB,EAFN,CAHJ,CAFJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,IAAI,CAACU,QADV,CAVJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAfJ,CADJ;AAsBH,KAvBM,CAAP;AAwBH;;AA7CgC;;AAgDrC,MAAMT,QAAQ,GAAG;AAEbU,EAAAA,UAAU,EAAE,SAFC;AAGbC,EAAAA,OAAO,EAAE,MAHI;AAIbC,EAAAA,MAAM,EAAE,iBAJK;AAKbC,EAAAA,MAAM,EAAE;AALK,CAAjB;AASA,eAAe3B,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport { listPosts } from '../graphql/queries';\nimport { API, graphqlOperation} from 'aws-amplify'\nimport DeletePost from './DeletePost';\nimport EditPost from './EditPost';\nimport { onCreatePost } from '../graphql/subscriptions'\nclass DisplayPosts extends Component {\n\n    state = {\n        posts: []\n    }\n\n    componentDidMount = async () => {\n        this.getPosts();\n\n        this.createPostListener = API.graphql(graphqlOperation(onCreatePost))\n    }\n\n    getPosts = async () => {\n        const result = await API.graphql(graphqlOperation(listPosts));\n        //console.log(\"All Posts: \", JSON.stringify(result.data.listPosts.items));\n        //console.log(\"All Posts: \", result.data.listPosts.items);\n        this.setState({posts: result.data.listPosts.items})\n    }\n\n    render() { \n        const {posts} = this.state;\n        return posts.map((post) => {\n            return(\n                <div className=\"posts\" style={rowStyle} key = {post.id}>\n                    <h1>{post.postTitle}</h1>\n                    <span style={{ fontStyle: \"italic\", color:\"#0ca5e297\" }}>\n                        {\"Postado Por: \"} {post.postOwnerUsername}\n                        {\" on \"}\n                        <time style={{ fontStyle: \"italic\"}}>\n                            {\" \"}\n                            { new Date(post.createdAt).toDateString()}\n                        </time>\n                    </span>\n                    <p>\n                        {post.postBody}\n\n                    </p>\n                    <br />\n                    <span>\n                        <DeletePost />\n                        <EditPost />\n                    </span>\n                </div>\n            )\n        })\n    }\n}\n\nconst rowStyle = {\n\n    background: '#f4f4f4',\n    padding: '10px',\n    border: '1px #ccc dotted',\n    margin: '14px'\n\n}\n\nexport default DisplayPosts;"]},"metadata":{},"sourceType":"module"}