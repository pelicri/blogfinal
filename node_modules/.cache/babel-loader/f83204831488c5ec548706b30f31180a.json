{"ast":null,"code":"'use strict';\n\nconst nodeToJson = require('./node2json');\n\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\n\nconst x2xmlnode = require('./xmlstr2xmlnode');\n\nconst buildOptions = require('./util').buildOptions;\n\nconst validator = require('./validator');\n\nexports.parse = function (xmlData, options, validationOption) {\n  if (validationOption) {\n    if (validationOption === true) validationOption = {};\n    const result = validator.validate(xmlData, validationOption);\n\n    if (result !== true) {\n      throw Error(result.err.msg);\n    }\n  }\n\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  return nodeToJson.convertToJson(xmlToNodeobj.getTraversalObj(xmlData, options), options);\n};\n\nexports.convertTonimn = require('../src/nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\n\nexports.parseToNimn = function (xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};","map":{"version":3,"sources":["/Users/cristianoandradre/Documents/treinamentoAWS/blogfinal/blogfinal/blogfinal/node_modules/fast-xml-parser/src/parser.js"],"names":["nodeToJson","require","xmlToNodeobj","x2xmlnode","buildOptions","validator","exports","parse","xmlData","options","validationOption","result","validate","Error","err","msg","defaultOptions","props","convertToJson","getTraversalObj","convertTonimn","convert2nimn","convertToJsonString","j2xParser","parseToNimn","schema"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,kBAAD,CAA5B;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,QAAD,CAAP,CAAkBG,YAAvC;;AACA,MAAMC,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAzB;;AAEAK,OAAO,CAACC,KAAR,GAAgB,UAASC,OAAT,EAAkBC,OAAlB,EAA2BC,gBAA3B,EAA6C;AAC3D,MAAIA,gBAAJ,EAAqB;AACnB,QAAGA,gBAAgB,KAAK,IAAxB,EAA8BA,gBAAgB,GAAG,EAAnB;AAE9B,UAAMC,MAAM,GAAGN,SAAS,CAACO,QAAV,CAAmBJ,OAAnB,EAA4BE,gBAA5B,CAAf;;AACA,QAAIC,MAAM,KAAK,IAAf,EAAqB;AACnB,YAAME,KAAK,CAAEF,MAAM,CAACG,GAAP,CAAWC,GAAb,CAAX;AACD;AACF;;AACDN,EAAAA,OAAO,GAAGL,YAAY,CAACK,OAAD,EAAUN,SAAS,CAACa,cAApB,EAAoCb,SAAS,CAACc,KAA9C,CAAtB;AACA,SAAOjB,UAAU,CAACkB,aAAX,CAAyBhB,YAAY,CAACiB,eAAb,CAA6BX,OAA7B,EAAsCC,OAAtC,CAAzB,EAAyEA,OAAzE,CAAP;AACD,CAXD;;AAYAH,OAAO,CAACc,aAAR,GAAwBnB,OAAO,CAAC,iBAAD,CAAP,CAA2BoB,YAAnD;AACAf,OAAO,CAACa,eAAR,GAA0BjB,YAAY,CAACiB,eAAvC;AACAb,OAAO,CAACY,aAAR,GAAwBlB,UAAU,CAACkB,aAAnC;AACAZ,OAAO,CAACgB,mBAAR,GAA8BrB,OAAO,CAAC,iBAAD,CAAP,CAA2BqB,mBAAzD;AACAhB,OAAO,CAACM,QAAR,GAAmBP,SAAS,CAACO,QAA7B;AACAN,OAAO,CAACiB,SAAR,GAAoBtB,OAAO,CAAC,YAAD,CAA3B;;AACAK,OAAO,CAACkB,WAAR,GAAsB,UAAShB,OAAT,EAAkBiB,MAAlB,EAA0BhB,OAA1B,EAAmC;AACvD,SAAOH,OAAO,CAACc,aAAR,CAAsBd,OAAO,CAACa,eAAR,CAAwBX,OAAxB,EAAiCC,OAAjC,CAAtB,EAAiEgB,MAAjE,EAAyEhB,OAAzE,CAAP;AACD,CAFD","sourcesContent":["'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  return nodeToJson.convertToJson(xmlToNodeobj.getTraversalObj(xmlData, options), options);\n};\nexports.convertTonimn = require('../src/nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n"]},"metadata":{},"sourceType":"script"}