{"ast":null,"code":"var _jsxFileName = \"/Users/cristianoandradre/Documents/treinamentoAWS/blogfinal/blogfinal/src/components/CreateCommentPost.js\";\nimport React, { Component } from 'react';\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\n\nclass CreateCommentPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      commentOwnerId: \"\",\n      commentOwnerUsername: \"\",\n      content: \"\"\n    };\n\n    this.componentWillMount = async () => {\n      await Auth.currentUserInfo().then(user => {\n        this.setState({\n          commentOwnerId: user.attributes.sub,\n          commentOwnerUsername: user.username\n        });\n      });\n    };\n\n    this.handleChangeContet = event => this.setState({\n      content: event.target.value\n    });\n\n    this.handleAddComment = async event => {\n      event.preventDefault();\n      const input = {\n        //props recebe objeto de outro arquivo JS - neste caso de Display\n        //Posts para linkar o Id do coment치rio com o id do post \n        //olhar o arquivo de mutations\n        commentPostId: this.props.commentPostId,\n        commentOwnerId: this.props.commentOwnerId,\n        commentOwnerUsername: this.props.commentOwnerUsername,\n        content: this.state.content,\n        createAt: new Date().toISOString()\n      };\n      await API.graphql(graphqlOperation(CreateComment, {\n        input\n      }));\n      this.setState({\n        content: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"add-comment\",\n      onSubmit: this.handleAddComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"content\",\n      rows: \"3\",\n      cols: \"40\",\n      required: true,\n      placeholder: \"Coment\\xE1rios\",\n      value: this.state.content,\n      onChange: this.handleChangeContet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"btn\",\n      style: {\n        fontSize: '19px'\n      },\n      value: \"Adicionar Coment\\xE1rio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default CreateCommentPost;","map":{"version":3,"sources":["/Users/cristianoandradre/Documents/treinamentoAWS/blogfinal/blogfinal/src/components/CreateCommentPost.js"],"names":["React","Component","Auth","API","graphqlOperation","CreateCommentPost","state","commentOwnerId","commentOwnerUsername","content","componentWillMount","currentUserInfo","then","user","setState","attributes","sub","username","handleChangeContet","event","target","value","handleAddComment","preventDefault","input","commentPostId","props","createAt","Date","toISOString","graphql","CreateComment","render","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,gBAApB,QAA4C,aAA5C;;AAGA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAAyC;AAAA;AAAA;AAAA,SACrCK,KADqC,GAC7B;AACJC,MAAAA,cAAc,EAAE,EADZ;AAEJC,MAAAA,oBAAoB,EAAE,EAFlB;AAGJC,MAAAA,OAAO,EAAC;AAHJ,KAD6B;;AAAA,SAOrCC,kBAPqC,GAOhB,YAAY;AAC7B,YAAMR,IAAI,CAACS,eAAL,GACLC,IADK,CACAC,IAAI,IAAG;AACT,aAAKC,QAAL,CAAc;AACVP,UAAAA,cAAc,EAAEM,IAAI,CAACE,UAAL,CAAgBC,GADtB;AAEVR,UAAAA,oBAAoB,EAAEK,IAAI,CAACI;AAFjB,SAAd;AAIH,OANK,CAAN;AAOH,KAfoC;;AAAA,SAiBrCC,kBAjBqC,GAiBhBC,KAAK,IAAI,KAAKL,QAAL,CAAc;AACxCL,MAAAA,OAAO,EAAEU,KAAK,CAACC,MAAN,CAAaC;AADkB,KAAd,CAjBO;;AAAA,SAqBrCC,gBArBqC,GAqBlB,MAAMH,KAAN,IAAe;AAE9BA,MAAAA,KAAK,CAACI,cAAN;AACA,YAAMC,KAAK,GAAG;AACV;AACA;AACA;AACAC,QAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWD,aAJhB;AAKVlB,QAAAA,cAAc,EAAE,KAAKmB,KAAL,CAAWnB,cALjB;AAMVC,QAAAA,oBAAoB,EAAE,KAAKkB,KAAL,CAAWlB,oBANvB;AAOVC,QAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OAPV;AAQVkB,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AARA,OAAd;AAWA,YAAM1B,GAAG,CAAC2B,OAAJ,CAAY1B,gBAAgB,CAAC2B,aAAD,EAAgB;AAACP,QAAAA;AAAD,OAAhB,CAA5B,CAAN;AACA,WAAKV,QAAL,CAAc;AAACL,QAAAA,OAAO,EAAC;AAAT,OAAd;AACH,KArCoC;AAAA;;AAuCrCuB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,aAAhB;AACC,MAAA,QAAQ,EAAE,KAAKV,gBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,IAAI,EAAC,SAFL;AAGA,MAAA,IAAI,EAAC,GAHL;AAIA,MAAA,IAAI,EAAC,IAJL;AAKA,MAAA,QAAQ,MALR;AAMA,MAAA,WAAW,EAAC,gBANZ;AAOA,MAAA,KAAK,EAAI,KAAKhB,KAAL,CAAWG,OAPpB;AAQA,MAAA,QAAQ,EAAG,KAAKS,kBARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAaI;AACA,MAAA,SAAS,EAAC,KADV;AAEA,MAAA,KAAK,EAAG;AAACe,QAAAA,QAAQ,EAAC;AAAV,OAFR;AAGA,MAAA,KAAK,EAAC,yBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ,CADJ;AAsBH;;AA9DoC;;AAiEzC,eAAe5B,iBAAf","sourcesContent":["import React, {Component} from 'react'\nimport { Auth, API, graphqlOperation } from 'aws-amplify'\n\n\nclass CreateCommentPost extends Component{\n    state = {\n        commentOwnerId: \"\",\n        commentOwnerUsername: \"\",\n        content:\"\"\n    }\n\n    componentWillMount = async () => {\n        await Auth.currentUserInfo()\n        .then(user =>{\n            this.setState({\n                commentOwnerId: user.attributes.sub,\n                commentOwnerUsername: user.username\n            })\n        })\n    }\n\n    handleChangeContet = event => this.setState({\n        content: event.target.value\n    })\n\n    handleAddComment = async event => {\n\n        event.preventDefault()\n        const input = {\n            //props recebe objeto de outro arquivo JS - neste caso de Display\n            //Posts para linkar o Id do coment치rio com o id do post \n            //olhar o arquivo de mutations\n            commentPostId: this.props.commentPostId, \n            commentOwnerId: this.props.commentOwnerId,\n            commentOwnerUsername: this.props.commentOwnerUsername,\n            content: this.state.content,\n            createAt: new Date().toISOString()\n            \n        }\n        await API.graphql(graphqlOperation(CreateComment, {input} ))\n        this.setState({content:\"\"})\n    }\n\n    render(){\n        return (\n            <div>\n                <form className=\"add-comment\"\n                 onSubmit={this.handleAddComment}>\n                    <textarea\n                    type=\"text\"\n                    name=\"content\"\n                    rows=\"3\"\n                    cols=\"40\"\n                    required\n                    placeholder=\"Coment치rios\"\n                    value = {this.state.content}\n                    onChange= {this.handleChangeContet} />\n                    \n                    \n                    <input \n                    className=\"btn\" \n                    style= {{fontSize:'19px'}}\n                    value=\"Adicionar Coment치rio\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default CreateCommentPost;"]},"metadata":{},"sourceType":"module"}